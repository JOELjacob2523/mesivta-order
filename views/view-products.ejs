<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="stylesheet" href="/static/css/view-products.css">
    <title>View Product</title>
</head>
<body>

    <h1>Welcome to UTA Mesivta of Kiryes Joel</h1>
    <div>
        <% for(let vendor of vendors){ %>
            <% if (vendor.vendorId === vendorId) { %>
                <h2>You are making an order for <span class="companyname"><%= vendor.companyname %></span></h2>
            <% } %>
        <% } %>
    </div>

    <div class="go-back">
        <p class="back-p">Click Here to go Back to Previews Page</p>
        <form action="/main" method="GET">
            <input type="submit" value="Go Back" class="back-vendor" title="Go Back">
        </form>
    </div>

    <div class="between-divs">

    <div class="between">
        <p class="select-p">Select a Date to See All Vendor Orders</p>
        <form action="/betweenOrders" method="POST">
            <div class="label">
                <label for="from">From:</label>
                    <input type="date" name="from" class="from-to">
                <label for="to">To:</label>
                    <input type="date" name="to" class="from-to">
                </div>
                    <div>
                <input type="submit" value="Select" class="select-btn">
            </div>
        </form>
    </div>

    <div class="between-items">
        <p class="select-p">Select an Item to See Item Orders</p>
            <form action="/between_item" method="POST">
        <div class="label">
            <label for="from">From:</label>
                <input type="date" name="from" class="from-to">
            <label for="to">To:</label>
                <input type="date" name="to" class="from-to">
                <label for="products">Choose Item:</label>
            <input type="text" list="products" name="products" class="products" placeholder="Choose item..." required>
                        <datalist id="products" aria-required="true">
                            <% for(let product of products){ %> 
                                <option value="<%= product.description %>">
                            <% } %>
                        </datalist>
                    </div>
                <div>
            <input type="submit" value="Select" class="select-btn">
        </div>
      </form>
    </div>
    
</div>

    <div class="create">
        <h3>Create New Product</h3>

        <div class="upload">
            <h5>To upload a file click here</h5>
            <form id="uploadForm" enctype="multipart/form-data">
                <div class="upload-input-div">
                    <label for="upload-input" class="upload-input-lbl" title="Drop file">Drop file here to upload</label>
                    <input type="file" name="items" class="upload-input" id="upload-input" onchange="showFileName()"/>
                </div>
                <p class="filename-p" id="filename-p">File selected: <span class="filename" id="filename"></span></p>
                <div>
                    <input type="submit" value="Upload" class="upload-submit-btn" title="Upload" />
                </div>
            </form>
        </div>
    
        <div class="uploadedItems" id="uploadedItems">
            <div class="uploadedItemsModel">
                <input type="button" onclick="hideUploadListComformation()" value="X" class="back">
                <h4 class="uploadListHeader">You are uploading the following item list</h4>
                <div class="upload-p-div">
                    <p class="descP">Description</p>
                    <p class="qtyP">Qty</p>
                    <p class="priceP">Price</p>
                </div>
                <form action="/createProductList" method="POST" onsubmit="uploadedConformaition()">
            </form>
            </div>
        </div>

        <form action="/createProduct" method="POST">
            <div class="description">
                <input type="textarea" rows="4" name="description" class="description" placeholder="Description..." required>
            </div>
            <div class="qty">
                <input type="number" class="per-cs" name="perCase" placeholder="Per Case..." required>
            </div>
            <div class="price">
                <input type="number" class="price" name="price" step="0.01" placeholder="Price..." required>
            </div>
            <div class="submit">
                <input type="submit" value="Create" class="submit-p" title="Create">
            </div>
        </form>
    </div>

    <div class="items">

          <label class="searchLabel">
            <input type="text" id="searchInput" onkeyup="search()" class="searchInput"
            placeholder="Search For Product..." >
        </label>

        <form action="/orderItems" method="POST" id="order-items">
            <div class="table-div">
                <table id="myTable">
                  <div>
                    <thead>
                        <th class="thead-num">#</th>
                        <th class="thead-amount">Amount</th>
                        <th class="thead-description">Description</th>
                        <th class="thead-qty">Qty</th>
                        <th class="thead-price">Price</th>
                        <th class="thead-ttl-price">Total Price</th>
                    </thead>
                </div>
                <% for(let product of products) { %>
                    <% for(let vendor of vendors) { %>
                        <% if (product.vendorId === vendor.vendorId) { %>
            <div>
                <tbody>
                    <tr id="TR" ondblclick="selectTableRowData(event)">
                    <input type="hidden" id="tbl-id" class="tbl-id-input" name="productId" value="<%= product.productId %>">
                    <td class="tbl-num"></td>
                    <td class="tbl-amount">
                        <input type="text" class="tbl-amount-input" name="amount" id="amount" value="">
                    </td>
                    <td class="tbl-description">
                        <input type="text" class="tbl-description-input" id="td-desc" name="productdesc" 
                        value="<%= product.description.charAt(0).toUpperCase() + product.description.slice(1) %>" readonly>
                    </td>
                    <td class="tbl-qty">
                        <input type="text" class="tbl-qty-input" id="td-qty" name="qty" value="<%= product.perCase %>" readonly>
                    </td>
                    <td class="tbl-price"><span class="prefix">$</span>
                        <input type="text" class="tbl-price-input" id="td-price" name="price" value="<%= parseFloat(product.price).toFixed(2) %>" readonly>
                    </td>
                    <td class="tbl-price"><span class="prefix">$</span>
                        <input type="text" class="tbl-rowprice-input" id="tbl-rowprice" name="totalrowprice" value="" readonly>
                    </td>
                    <input type="hidden" name="date">
                    </tr>
                </tbody> 
            </div>          
                <% } %>
               <% } %>
              <% } %>
            </table>
        </div>

              <div class="submit-order-div">
                    <div class="sub-total">

                        <label for="total-boxes-input" class="total-boxes-lbl">Total Boxes Is:</label>
                        <input type="text" id="total-boxes-input" class="total-boxes-input" value="" name="totalboxes" readonly>

                        <label for="total-price-input" class="total-price-lbl">Sub Total Price Is:</label>    
                        <input type="text" id="total-price-input" class="total-price-input" value="" name="totalprice" readonly>

                    </div>
                    <input type="button" class="submit-order" onclick="orderConfirmed()" value="Submit Order" id="submit-order">
                </div>
            </form> 
    </div>
    </div>

        <div class="confirm-order-model" id="confirm-order-model">
            <div class="confirm-order-modal-content">
               <p class="confirm-order-modal-p">Are you sure you want to submit the order?</p>
               <input type="submit" value="Submit" class="confirm-submit-order">
            </div>
        </div>

        <div class="modal" id="modal">
            <div class="modal-content">
                <p class="modal-p">Order Submitted and E-mailed Successfully</p>
            </div>
        </div>

        <div class="update-modal" id="update-modal">
            <div class="update-modal-content">
                <p class="update-modal-p">Item Updated Successfully</p>
            </div>
        </div>

        <div class="delete-modal" id="delete-modal-confarmation">
            <div class="item-deleted-modal-content">
                <p class="delete-modal-p">Item Deleted Successfully</p>
            </div>
        </div>

        <div class="update-modal" id="uploaded-modal">
            <div class="update-modal-content">
                <p class="update-modal-p">List Uploded Successfully</p>
            </div>
        </div>

            <div class="create-update" id="create-update">
                <div class="text-center">                    
                    <input type="button" onclick="hideUpdateComformation()" value="X" class="back">
                    <h3 class="update-h3">Edit Item</h3>                    
                <form action="/update" method="POST" id="update" onsubmit="itemUpdated()">
                        <input type="hidden" value="" name="productId" id="update-productId" class="update-id">
                    <div class="update-desc-div">
                        <p>Edit Description:
                        <input type="text" id="update-description" value="" name="description" class="update-desc">
                    </p></div>
                    <div class="update-qty-div">
                        <p>Edit Qty:
                        <input type="text" id="update-qty" value="" name="perCase" class="update-qty">
                    </p></div>
                    <div class="update-price-div">
                        <p>Edit Price:
                        <input type="text" id="update-price" value="" name="price" class="update-price">
                    </p></div>                    
                    <div class="update-cancel">
                        <input type="submit" class="submit-update" value="Update">
                    </div>
                </form>
                <input type="button" value="Delete Item" class="delete-btn" onclick="deleteItem()">
                </div>
            </div>

         <div class="delete-model" id="delete-model">
            <div class="delete-model-content">
            <input type="button" onclick="hideDeleteComformation()" value="X" class="back">

            <h3 class="dlt-h3">Are You Sure You Want to Delete Item</h3>

            <p class="dlt-description-p">Description: <span class="dlt-description"></span></p> 
            <p class="dlt-qty-p">Qty: <span class="dlt-qty"></span></p> 
            <p class="dlt-price-p">Price: <span class="dlt-price"></span></p>

            <form action="/delete" method="POST" id="delete-form" onsubmit="itemDeleted()">
                <input type="hidden" id="deleteid" value="" name="productId">
                <input type="submit" value="Delete Item" class="form-dlt-btn">
            </form>
            </div>        
       </div>

    <script type="text/javascript">

        rowNum();
        calculateTotalPrice();
        calculateTotalBoxes();
        nextInput()

        function showFileName(){
            document.getElementById('filename-p').style.display = 'block';
        }

        document.getElementById('upload-input').addEventListener('change', (e) => {
            let filename = e.target.files[0].name;
            document.getElementById('filename').innerHTML = filename;
        })

        document.getElementById('uploadForm').addEventListener('submit', function(event) {
            event.preventDefault();

            let formData = new FormData(this);

            fetch('/uploads', {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                const excelData = JSON.parse(data);

                const form = document.querySelector('.uploadedItemsModel form');
                    form.innerHTML = '';
                
                excelData.forEach(item => {

                    const inputContainer = document.createElement('div');
                    inputContainer.classList.add('inputContainer');

                    const descriptionInput = document.createElement('input');
                    descriptionInput.setAttribute('type', 'text');
                    descriptionInput.setAttribute('name', 'description');
                    descriptionInput.setAttribute('value', item.description);
                    descriptionInput.classList.add('excelDataDesc');
                    form.appendChild(descriptionInput);
                    form.appendChild(inputContainer);

                    const perCaseInput = document.createElement('input');
                    perCaseInput.setAttribute('type', 'text');
                    perCaseInput.setAttribute('name', 'perCase');
                    perCaseInput.setAttribute('value', item.perCase || '0');
                    if (perCaseInput.value > 0){
                        perCaseInput.classList.add('excelDataQty');
                    } else {
                        perCaseInput.classList.add('excelDataQtyZero');
                    }                    
                    form.appendChild(perCaseInput);
                    form.appendChild(inputContainer);

                    const priceInput = document.createElement('input');
                    priceInput.setAttribute('type', 'text');
                    priceInput.setAttribute('name', 'price');
                    priceInput.setAttribute('value', item.price || '0');
                    if (priceInput.value > 0){
                        priceInput.classList.add('excelDataPrice');
                    } else {
                        priceInput.classList.add('excelDataPriceZero');
                    }
                    form.appendChild(priceInput);
                    form.appendChild(inputContainer);        
                })                

                const submitButton = document.createElement('input');
                submitButton.setAttribute('type', 'submit');
                submitButton.setAttribute('value', 'Submit');
                submitButton.classList.add('uploadListSubmitBtn')
                form.appendChild(submitButton);

                const uploadedItemsDiv = document.getElementById('uploadedItems')
                    uploadedItemsDiv.style.display = 'block';
                    
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });

        function hideUploadListComformation(){
            const uploadedItemsDiv = document.getElementById('uploadedItems')
                    uploadedItemsDiv.style.display = 'none';
        }

        function uploadedConformaition(){
            document.getElementById('uploadedItems').style.display = 'none'
                document.getElementById('uploaded-modal').style.display = 'block'        
              setTimeout( () => {
                document.getElementById('uploaded-modal').style.display = 'none'
              }, 5000)
    }

        function nextInput() {
        const rows = document.querySelectorAll('#myTable tbody tr');

        rows.forEach((row, index) => {
            let cells = row.querySelectorAll('.tbl-amount-input');
            cells.forEach((cell, cellIndex) => {
              cell.addEventListener('keydown', (e) => {
                if (e.keyCode === 40) {
                  if (index < rows.length - 1) {
                    let nextRow = rows[index + 1];
                    let nextCell = nextRow.querySelectorAll('.tbl-amount-input')[cellIndex];
                    nextCell.focus();
                  }
                } else if (e.keyCode === 38) {
                  if (index > 0) {
                    let prevRow = rows[index - 1];
                    let prevCell = prevRow.querySelectorAll('.tbl-amount-input')[cellIndex];
                    prevCell.focus();
                }
              }
            });
          });
        });
       }

        function rowNum(){
            let num = 1;
            const rows = document.querySelectorAll('#myTable tbody tr');
            
            rows.forEach(row => {
                const rowNum = row.querySelector('.tbl-num');
                rowNum.textContent = `${num ++}.`;
            })
        }

        function calculateTotalRowPrice(event) {
            let total = 0;

            const amountInput = event.target;
            const row = amountInput.closest('tr');

            const priceInput = row.querySelector('.tbl-price-input');
            const totalPriceInput = row.querySelector('.tbl-rowprice-input');

            const amount = parseFloat(amountInput.value) || 0;
            const price = parseFloat(priceInput.value) || 0;

            if (isNaN(amount) || isNaN(price)) {
                totalPriceInput.value = ''; 
            } else {
                const total = amount * price;
                totalPriceInput.value = total.toFixed(2);
            }
        }

        const rowamountInputs = document.querySelectorAll('.tbl-amount-input');
        rowamountInputs.forEach(input => {
        input.addEventListener('input', calculateTotalRowPrice);
      });


        function calculateTotalPrice() {
        let total = 0;

        const rows = document.querySelectorAll('#myTable tbody tr');

        rows.forEach(row => {
        const amountInput = row.querySelector('.tbl-amount-input');
        const priceInput = row.querySelector('.tbl-price-input');

        const amount = parseFloat(amountInput.value) || 0;
        const price = parseFloat(priceInput.value) || 0;

        const rowTotal = amount * price;
        total += rowTotal;
      });
        const totalPriceInput = document.getElementById('total-price-input');
        totalPriceInput.value = '$' + total.toFixed(2);
      }
            
        const amountInputs = document.querySelectorAll('.tbl-amount-input');
        amountInputs.forEach(input => {
        input.addEventListener('input', calculateTotalPrice);
      });

      function calculateTotalBoxes() {
        let total = 0;

        const rows = document.querySelectorAll('#myTable tbody tr');

        rows.forEach(row => {
        const amountBoxInput = row.querySelector('.tbl-amount-input');
        const amount = parseFloat(amountBoxInput.value) || 0;
        total += amount;
      });
        const totalBoxesInput = document.getElementById('total-boxes-input');
        totalBoxesInput.value = total;
      }
            
        const amountBoxInputs = document.querySelectorAll('.tbl-amount-input');
        amountBoxInputs.forEach(input => {
        input.addEventListener('input', calculateTotalBoxes);
      });

    function hideUpdateComformation(){
        document.getElementById('create-update').style.display = 'none'
    };

    function selectTableRowData(event){
        document.getElementById('create-update').style.display = 'block';

        const row = event.target.parentNode;
        const rowData = {
        //productId: row.cells[0].textContent,
        //description: row.cells[3].textContent,
        //qty: row.cells[4].textContent,
        //price: row.cells[5].textContent
        
        productId: row.querySelector('.tbl-id-input').value,
        description: row.querySelector('.tbl-description-input').value,
        qty: row.querySelector('.tbl-qty-input').value,
        price: row.querySelector('.tbl-price-input').value,
       }
             
        document.getElementById('update-productId').value = rowData.productId;
        document.getElementById('update-description').value = rowData.description;
        document.getElementById('update-qty').value = rowData.qty;
        document.getElementById('update-price').value = rowData.price;

        const form = document.getElementById('update');
        form.addEventListener('submit', (event) => {
        event.preventDefault();

        const updatedData = {
        productId: document.getElementById('update-productId').value,
        description: document.getElementById('update-description').value,
        perCase: document.getElementById('update-qty').value,
        price: document.getElementById('update-price').value
        };

        form.submit();
        document.getElementById('create-update').style.display = 'none';
         
      });
    };

    function itemUpdated(){
        document.getElementById('update-modal').style.display = 'block'        
        setTimeout( () => {
        document.getElementById('update-modal').style.display = 'none'
        }, 5000)
    }

    function deleteItem() {        
        document.getElementById('create-update').style.display = 'none';
        document.getElementById('delete-model').style.display = 'block'

        const itemData = {
        productId: document.querySelector('.update-id').value,
        description: document.querySelector('.update-desc').value,
        qty: document.querySelector('.update-qty').value,
        price: document.querySelector('.update-price').value
        }

        document.getElementById('deleteid').value = itemData.productId

        document.querySelector('.dlt-description').innerHTML = `${itemData.description}`;
        document.querySelector('.dlt-qty').innerHTML = `${itemData.qty}`;
        document.querySelector('.dlt-price').innerHTML = `${itemData.price}`;

        let form = document.getElementById('delete-form');
        form.addEventListener('submit', (event) => {
        event.preventDefault();

        document.getElementById('deleteid').value = itemData.productId;

        form.submit();
        document.getElementById('delete-model').style.display = 'none';
    });
    }

    function itemDeleted(){
        document.getElementById('delete-modal-confarmation').style.display = 'block'        
        setTimeout( () => {
        document.getElementById('delete-modal-confarmation').style.display = 'none'
        }, 5000)
    }

    function hideDeleteComformation(){
        document.getElementById('delete-model').style.display = 'none'
    };

    function orderConfirmed(){
        document.querySelector('#order-items').addEventListener('click', (event) => {
        event.preventDefault();
        document.getElementById('confirm-order-model').style.display = 'block'
        document.getElementById('modal').style.display = 'block'      
        setTimeout( () => {
        document.getElementById('modal').style.display = 'none'
        }, 5000)
        document.getElementById('order-items').submit();
    })
}

        function search() {
        var input, filter, table, tr, td, i;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        var matchingRows = [];

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[2];
            if (td) {
            if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
                var rowData = {
                    description: tr[i].getElementsByTagName('td')[3].innerHTML
                };
                matchingRows.push(rowData);
            } else {
                tr[i].style.display = "none";
            }
           }
          }       
        }

    </script>

    <footer>
        <% const date = new Date() %>
        <p>&copy; <%= date.toLocaleString('en-US', { year: "numeric" }) %> Copyright UTA Mesivta KJ. All Rights reserved.</p>
        <p> <span class="footer-span">Edit Instructions:</span>
               To edit an item, Double click on the row of this item.
        </p>
        <p> <span class="footer-span">Upload Instructions:</span>
            Before you upload a file ask for a tamplate, 
            Do not use your own tamplate as it will not be updated in the database,
            You can ask for a tamplate at: <a href="mailto:utamky6@gmail.com">Ask for a tamplate</a>.
        </p>
    </footer>
</body>
</html>