<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="stylesheet" href="/static/css/view-products.css">
    <title>Create Product</title>
</head>
<body>
    <h1>Welcome to UTA Mesivta of Kiryes Joel</h1>
    <div>
        <% for(let vendor of vendors){ %>
            <% if (vendor.vendorId === vendorId) { %>
                <h2>You are making an order for <span class="companyname"><%= vendor.companyname %></span></h2>
            <% } %>
        <% } %>
    </div>

    <div class="go-back">
        <p class="back-p">Click Here to go Back to Previews Page</p>
        <form action="/main" method="GET">
            <input type="submit" value="Go Back" class="back-vendor">
        </form>
    </div>

    <div class="between">
        <form action="/between" method="POST">
            <p class="select-p">Select a Date to See All Vendor Orders</p>
            <div class="label">
                <label for="from">From:</label>
                    <input type="date" name="from" class="from-to">
                <label for="to">To:</label>
                    <input type="date" name="to" class="from-to">
                </div>
                    <div>
                <input type="submit" value="Select" class="select-btn">
            </div>
        </form>
    </div>

    <div class="create">
        <h3>Create New Product</h3>
        <form action="/createProduct" method="POST">
            <div class="description">
                <input type="textarea" rows="4" name="description" class="description" placeholder="Description...">
            </div>
            <div class="qty">
                <input type="number" class="per-cs" name="perCase" placeholder="Per Case...">
            </div>
            <div class="price">
                <input type="number" class="price" name="price" step="0.01" placeholder="Price...">
            </div>
            <div class="submit">
                <input type="submit" value="Create" class="submit-p">
            </div>
        </form>
    </div>

    <div class="items">
        <form action="/orderItems" method="POST" id="order-items">
                <table>
                  <div>
                    <thead>
                        <th>#</th>
                        <th>Amount</th>
                        <th>Description</th>
                        <th>Qty</th>
                        <th>Price</th>
                        <th>Total Cases</th>
                        <th>Total Price</th>
                    </thead>
                </div>
                <% for(let product of products) { %>
                    <% for(let vendor of vendors) { %>
                        <% if (product.vendorId === vendor.vendorId) { %>
            <div>
                <tbody>
                    <tr id="TR" ondblclick="editItem()">
                    <td class="tbl-num"></td>
                    <td><input type="text" name="amount" id="amount" oninput="sumBoxes()" class="tbl-amount"></td>
                    <td id="td-desc" name="productdesc" class="tbl-description"><%= product.description %></td>
                    <td id="td-qty" name="qty" id="qty" class="tbl-qty"><%= product.perCase %></td>
                    <td id="td-price" name="price" id="price" class="tbl-price"><%= product.price %></td>           
                    <td name="totalboxes" id="total-boxes" class="tbl-ttl-boxes"></td>
                    <td name="totalprice" id="totalprice" class="tbl-ttl-price"></td>
                    <input type="hidden" name="date">
                    </tr>
                </tbody> 
            </div>          
                <% } %>
               <% } %>
              <% } %>
            </table>
              <div class="submit-order-div">
                    <div class="sub-total">
                        <p class="sub-total-p">Sub Total</p>        
                        <input type="number" id="sub-total" class="sub-total-input" readonly>
                    </div>
                    <input type="submit" class="submit-order" onclick="show()" value="Submit Order" id="submit-order">
                </div>
            </form> 
    </div>

        <div class="modal" id="modal">
            <div class="modal-content">
                <p class="modal-p">Order Submitted Successfully</p>
            </div>
        </div>

            <div class="create-update" id="create-update">
                <div class="text-center">
                    <h3 class="create-h3">Update Item</h3>
                <div>
                    
                <form action="/update" method="POST" id="update">

                        <input type="text" id="update-description" value="" name="description" class="details-desc">
                        <input type="text" id="update-qty" value="" name="perCase" class="details-desc">
                        <input type="text" id="update-price" value="" name="price" class="details-desc">
                    
                    <div class="update-cancel">
                        <input type="button" onclick="hideComformation()" value="Cancel" class="back">
                        <input type="submit" class="submit-update" value="Update">
                    </div>
                </form>
            </div>
         </div>
       </div>

    <script>

    function sumBoxes() {
        let rows = document.getElementsByClassName('details');
        let amount = document.getElementById('amount').value;
        let boxes = document.getElementById('total-boxes').value;
        let price = document.getElementById('price').value;

        let totalBoxes = amount + boxes;
        let subTotal = amount * price;
        document.getElementById('total-boxes').value = totalBoxes;
        document.getElementById('totalprice').value = subTotal;
    }

    /*// Step 1: Add event listener to table rows
    const table = document.getElementById('TR');
    table.addEventListener('dblclick', handleRowDoubleClick);

    function handleRowDoubleClick(event) {
    // Step 2: Retrieve data from clicked row
    const row = event.target.parentNode;
    const rowData = {
    // Retrieve data from the row and store it in an object
    // For example:
    description: row.cells[2].textContent,
    qty: row.cells[3].textContent,
    price: row.cells[4].textContent
  };

    // Step 3: Open a popup window
    const popupWindow = window.open('edit-popup.html', 'Edit Popup', 'width=400,height=300', editForm);

    // Step 4: Create HTML form in the popup window
    // edit-popup.html


    // Step 5: Populate input fields with retrieved data
    popupWindow.addEventListener('DOMContentLoaded', () => {
    const form = popupWindow.document.getElementById('update');
    form.description.value = rowData.description;
    form.qty.value = rowData.qty;
    form.price.value = rowData.price;
  });

    // Step 6: Allow user to make changes

    // Step 7: Add submit button event listener
    popupWindow.document.getElementById('update').addEventListener('submit', (event) => {
    event.preventDefault();

    // Step 8: Retrieve updated data from input fields
    const updatedData = {
      description: popupWindow.document.getElementById('update-description').value,
      perCase: popupWindow.document.getElementById('update-qty').value,
      price: popupWindow.document.getElementById('update-price').value
      // Retrieve other input field values
    };

    // Step 9: Close the popup window
    popupWindow.close();

    // Step 10: Update the table row with the new data
    // Update the row with the updatedData
  });
}*/

    function selectTableRowData(){

        const row = event.target.parentNode;
        const rowData = {
        description: row.cells[2].textContent,
        qty: row.cells[3].textContent,
        price: row.cells[4].textContent
       }

        document.getElementById('update-description').value = rowData.description;
        document.getElementById('update-qty').value = rowData.qty;
        document.getElementById('update-price').value = rowData.price;

    }

    /*function sumBoxes() {
        let rows = document.getElementsByClassName('details');
        let totalBoxes = document.getElementById('total-boxes').value;

        for (let i = 0; i < rows.length; i++) {
            let amountInput = rows[i].querySelector('[name="amount"]');
            let amount = parseFloat(amountInput.value);
            let boxesPerCase = parseInt(rows[i].querySelector('[name="qty"]').value, 10);

            let totalForRow = amount * boxesPerCase;
            totalBoxes += totalForRow;

            rows[i].querySelector('[name="totalboxes"]').value = totalForRow;
        }

        document.getElementById('total-boxes').value = totalBoxes;
    }*/

        function editItem(){
            document.getElementById('create-update').style.display = 'block';
            selectTableRowData();
        }

        function hideComformation(){
            document.getElementById('create-update').style.display = 'none'
        }

    function show(){
        document.querySelector('#order-items').addEventListener('submit', (event) => {
        event.preventDefault();
        document.getElementById('modal').style.display = 'block'        
        setTimeout( () => {
        document.getElementById('modal').style.display = 'none'
        }, 1500)
        document.getElementById('order-items').submit();
    })
}

    </script>
</body>
</html>